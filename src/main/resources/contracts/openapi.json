{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "/services/rest"
    }
  ],
  "info": {
    "description": "Sample app that demonstrates how to implement a service that uses NEP",
    "version": "1.31.0-SNAPSHOT",
    "title": "sdk-sample",
    "contact": {
      "name": "NCR"
    },
    "license": {
      "name": "NCR Proprietary - All rights reserved",
      "url": "https://www.ncr.com"
    }
  },
  "paths": {
    "/todos/{name}": {
      "get": {
        "tags": [
          "todos"
        ],
        "operationId": "get_1",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the todo item",
            "required": true,
            "example": "dentist-001",
            "schema": {
              "type": "string",
              "minimum": 3,
              "maximum": 255,
              "minLength": 3,
              "maxLength": 255,
              "minItems": 3,
              "maxItems": 255
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "example": "sample-organization",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The todo item with the specified name"
          },
          "400": {
            "description": "The request failed validation",
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The todo does not exist",
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "TODO_VIEWER"
          ]
        }
      },
      "delete": {
        "tags": [
          "todos"
        ],
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the todo item",
            "required": true,
            "example": "dentist-001",
            "schema": {
              "type": "string",
              "minimum": 3,
              "maximum": 255,
              "minLength": 3,
              "maxLength": 255,
              "minItems": 3,
              "maxItems": 255
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "example": "sample-organization",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The todo was successfully deleted"
          },
          "400": {
            "description": "The request failed validation",
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The todo does not exist",
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          },
          "409": {
            "description": "The state of the todo is invalid for the requested operation or the todo already exists",
            "x-exception-types": [
              "com.ncr.nep.common.exception.InvalidResourceStateException",
              "com.ncr.nep.common.exception.ResourceAlreadyExistsException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "TODO_ADMINISTRATOR"
          ]
        }
      }
    },
    "/todos": {
      "get": {
        "tags": [
          "todos"
        ],
        "operationId": "findAll_1",
        "parameters": [
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "example": "sample-organization",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of todo items"
          }
        },
        "x-authorities": {
          "roles": [
            "TODO_VIEWER"
          ]
        }
      },
      "post": {
        "tags": [
          "todos"
        ],
        "operationId": "create_1",
        "responses": {
          "204": {
            "description": "The todo item was created successfully"
          },
          "400": {
            "description": "The request failed validation",
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "The todo already exists",
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceAlreadyExistsException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "TODO_ADMINISTRATOR"
          ]
        }
      }
    },
    "/todos/{name}/complete": {
      "put": {
        "tags": [
          "todos"
        ],
        "operationId": "complete_1",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the todo item",
            "required": true,
            "example": "dentist-001",
            "schema": {
              "type": "string",
              "minimum": 3,
              "maximum": 255,
              "minLength": 3,
              "maxLength": 255,
              "minItems": 3,
              "maxItems": 255
            }
          },
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "example": "sample-organization",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The todo item was completed"
          },
          "400": {
            "description": "The request failed validation",
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "404": {
            "description": "The todo does not exist",
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceDoesNotExistException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "TODO_ADMINISTRATOR"
          ]
        }
      }
    },
    "/notes": {
      "get": {
        "tags": [
          "notes"
        ],
        "operationId": "findAll_2",
        "parameters": [
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "example": "sample-organization",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of note items"
          }
        },
        "x-authorities": {
          "roles": [
            "note_VIEWER"
          ]
        }
      },
      "post": {
        "tags": [
          "notes"
        ],
        "operationId": "create_2",
        "parameters": [
          {
            "name": "nep-correlation-id",
            "in": "header",
            "description": "A unique ID that can be used to correlate one or more related requests for debugging or tracing purposes",
            "required": false,
            "example": "WUSRB185213-AE7-11243-22a2c887-12a7-48e6-b9af-0ed7fb67e4cb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nep-organization",
            "in": "header",
            "description": "The organization the request applies to",
            "required": false,
            "example": "sample-organization",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 512
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The note item was created successfully"
          },
          "400": {
            "description": "The request failed validation",
            "x-exception-types": [
              "com.ncr.nep.common.exception.PayloadConstraintViolationException"
            ]
          },
          "409": {
            "description": "The note already exists",
            "x-exception-types": [
              "com.ncr.nep.common.exception.ResourceAlreadyExistsException"
            ]
          }
        },
        "x-authorities": {
          "roles": [
            "note_ADMINISTRATOR"
          ]
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoRequest"
              }
            }
          },
          "description": "The note item to create",
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TodoData": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "dentist-001",
            "description": "The name of the todo item",
            "minLength": 3,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "example": "Dentist appointment",
            "description": "Description of the TODO item"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-03-31T10:00:00.000Z",
            "description": "The time the TODO item was created"
          },
          "completed": {
            "type": "boolean",
            "description": "Indicates if the TODO was completed or not"
          }
        },
        "description": "Contains full details for a todo item"
      },
      "CreateTodoRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "dentist-001",
            "description": "The name of the todo item",
            "minLength": 3,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "example": "Dentist appointment",
            "description": "Description of the TODO item"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-03-31T10:00:00.000Z",
            "description": "The time the TODO item was created"
          }
        },
        "description": "Defines information needed to create a new todo item"
      },
      "FindTodosListResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "description": "The todo items in the system.",
            "items": {
              "$ref": "#/components/schemas/TodoData"
            }
          }
        },
        "description": "Contains search results for todo items found the system"
      },
      "PayloadConstraintViolationException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.PayloadConstraintViolationException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.PayloadConstraintViolationException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          },
          "constraintViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintViolationData"
            }
          }
        },
        "description": "The request failed validation"
      },
      "ResourceDoesNotExistException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.ResourceDoesNotExistException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.ResourceDoesNotExistException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The resource does not exist"
      },
      "InvalidResourceStateException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.InvalidResourceStateException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.InvalidResourceStateException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The state of the resource is invalid for the requested operation"
      },
      "ResourceAlreadyExistsException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.ResourceAlreadyExistsException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.ResourceAlreadyExistsException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The resource already exists"
      },
      "BusinessException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.BusinessException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.BusinessException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "An error occurred while processing a request"
      },
      "HeaderConstraintViolationException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.HeaderConstraintViolationException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.HeaderConstraintViolationException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          },
          "constraintViolations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintViolationData"
            }
          }
        },
        "description": "The request failed validation of request headers"
      },
      "ConstraintViolationData": {
        "type": "object",
        "properties": {
          "invalidValue": {
            "type": "string",
            "description": "The value that failed validation"
          },
          "message": {
            "type": "string",
            "description": "Message describing the violation error"
          },
          "propertyPath": {
            "type": "string",
            "description": "The path of the property that failed validation"
          }
        },
        "description": "Captures constraint violation information for an API request"
      },
      "AccessDeniedException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.AccessDeniedException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.AccessDeniedException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Access denied due to insufficient privileges."
      },
      "InvalidCredentialsException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.InvalidCredentialsException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.InvalidCredentialsException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The user credentials are invalid"
      },
      "TenantAccessDeniedException": {
        "type": "object",
        "required": [
          "errorType",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "errorType": {
            "type": "string",
            "example": "com.ncr.nep.common.exception.TenantAccessDeniedException",
            "description": "Unique ID identifying the type of error",
            "default": "com.ncr.nep.common.exception.TenantAccessDeniedException"
          },
          "details": {
            "type": "array",
            "description": "Error-specific values that provide more information on the error, such as the reason for failure or error code",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The user does not have access to the organization specified in the request"
      }
    }
  }
}